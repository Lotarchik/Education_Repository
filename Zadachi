import scipy
from scipy import *
import numpy as np
#первая задача
A = np.array([[1, 2], [3, -1]])
b = np.array([10, 5])

x, y = linalg.solve(A, b)

print("Решение системы уравнений: x =", x, ", y =", y)
# вторая задача
from math import sqrt
a=2
b=-4
c=1
D = b**2-4*a*c
x1 = (-b + sqrt(D)) / (2 * a)
x2 = (-b - sqrt(D)) / (2 * a)
print(x1)
print(x2)
#третья задача
import scipy.linalg

A = [[2, 3, 1], [4, -1, 5], [6, 2, 3]]
b = [9, 15, 23]

x, y, z = scipy.linalg.solve(A, b)

print("x =", x)
print("y =", y)
print("z =", z)

#четвертая задача

import numpy as np
a = 1
b = -6
c = 11
d = -6
coefficients = [a, b, c, d]
roots = np.roots(coefficients)
print("Корни кубического уравнения:", roots)

#пятая задача
import numpy as np
from scipy.optimize import root_scalar

# Определим функцию
def f(x):
    return np.sin(x) + np.log(x) - 1
result = root_scalar(f, bracket=[1, 3], method='bisect')

print("Корень уравнения:", result.root)
